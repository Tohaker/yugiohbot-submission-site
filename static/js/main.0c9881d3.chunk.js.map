{"version":3,"sources":["assets/Normal.png","assets/bewd.jpg","Preview.styles.ts","Preview.tsx","Form.styles.ts","Form.tsx","assets/logo-trans.png","App.styles.ts","App.tsx","index.tsx"],"names":["Container","styled","div","Canvas","canvas","Preview","image","canvasRef","useRef","useEffect","count","context","current","getContext","frame","Image","img","render","drawImage","onload","src","border","placeholder","ref","width","height","data-testid","TitleContainer","Information","InputContainer","Input","input","UploadButton","button","Label","label","isMobile","test","navigator","userAgent","submitForm","file","a","data","FormData","append","name","axios","post","console","error","SubmissionForm","setPreview","useState","loading","setLoading","setImage","message","setMessage","submit","useCallback","htmlFor","data-tip","data-for","id","place","globalEventOff","undefined","type","onChange","target","URL","createObjectURL","files","onClick","disabled","HeaderImage","Page","App","preview","headerImage","alt","ReactDOM","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,mCCA1B,MAA0B,iC,oVCElC,IAAMA,EAAYC,IAAOC,IAAV,KAOTC,EAASF,IAAOG,OAAV,KCANC,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAClBC,EAAYC,iBAA0B,MAsB5C,OApBAC,qBAAU,WAAO,IAAD,EACVC,EAAQ,EACNC,EAAO,UAAGJ,EAAUK,eAAb,aAAG,EAAmBC,WAAW,MACxCC,EAAQ,IAAIC,MACZC,EAAM,IAAID,MAEVE,EAAS,aACPP,EAAQ,IAEP,OAAPC,QAAO,IAAPA,KAASO,UAAUJ,EAAO,EAAG,GACtB,OAAPH,QAAO,IAAPA,KAASO,UAAUF,EAAK,GAAI,IAAK,IAAK,OAGxCF,EAAMK,OAASF,EACfD,EAAIG,OAASF,EAEbH,EAAMM,IAAMC,EACZL,EAAII,IAAMd,GAASgB,IAClB,CAAChB,IAGF,eAACN,EAAD,WACE,0CACA,cAACG,EAAD,CACEoB,IAAKhB,EACLiB,MAAM,MACNC,OAAO,MACPC,cAAY,qB,6xCCrCb,IAAM1B,EAAYC,IAAOC,IAAV,KAQTyB,EAAiB1B,IAAOC,IAAV,KAId0B,EAAc3B,IAAOC,IAAV,KAeX2B,EAAiB5B,IAAOC,IAAV,KAKd4B,EAAQ7B,IAAO8B,MAAV,KASLC,EAAe/B,IAAOgC,OAAV,KAWZC,EAAQjC,IAAOkC,MAAV,KCnCZC,EAAW,4BAA4BC,KAAKC,UAAUC,WAEtDC,EAAU,uCAAG,WAAOC,GAAP,eAAAC,EAAA,4DAEf,sEAEIC,EAAO,IAAIC,UACZC,OAAOJ,EAAKK,KAAML,GALN,kBAQTM,IAAMC,KANZ,qEAMsBL,EAAM,IARb,iCASR,GATQ,uCAWfM,QAAQC,MAAM,2BAAd,MAXe,mBAYR,GAZQ,yDAAH,sDAgBHC,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAwB,EACzBC,oBAAS,GADgB,mBAChDC,EADgD,KACvCC,EADuC,OAE7BF,mBAAsB,MAFO,mBAEhD/C,EAFgD,KAEzCkD,EAFyC,OAGzBH,mBAAS,IAHgB,mBAGhDI,EAHgD,KAGvCC,EAHuC,KAKjDC,EAASC,sBAAW,sBAAC,sBAAAlB,EAAA,yDACzBa,GAAW,GADc,MAEpBjD,EAFoB,qCAEHkC,EAAWlC,GAFR,qDAGvBoD,EAAW,iDAHY,wBAKvBA,EAAW,qCAAD,OAAsCpD,EAAMwC,OAL/B,QAOzBS,GAAW,GAPc,4CAQxB,CAACjD,IAEJ,OACE,eAAC,EAAD,WACE,eAACqB,EAAD,WACE,uBAAOkC,QAAQ,eAAf,0BACA,cAACjC,EAAD,CAAakC,YAAA,EAASC,WAAS,aAA/B,eAGA,cAAC,IAAD,CACEC,GAAG,aACHC,MAAM,QACNC,eAAgB9B,EAAW,kBAAe+B,EAH5C,SAKE,4BA/CO,2CAkDX,eAACtC,EAAD,WACE,cAACC,EAAD,CACEsC,KAAK,OACLtB,KAAK,QACLkB,GAAG,eACHK,SAAU,YAAiB,IAAdC,EAAa,EAAbA,OACXlB,EAAWmB,IAAIC,gBAAgBF,EAAOG,OAASH,EAAOG,MAAM,KAC5DjB,EAASc,EAAOG,OAASH,EAAOG,MAAM,OAG1C,cAACzC,EAAD,CAAc0C,QAASf,EAAQgB,SAAUrB,EAAzC,uBAIF,cAACpB,EAAD,CAAOR,cAAY,UAAnB,SAA8B+B,QCjFrB,MAA0B,uC,wgBCElC,IAAMzD,EAAYC,IAAOC,IAAV,KAYT0E,EAAc3E,IAAOe,IAAV,KAOX6D,EAAO5E,IAAOC,IAAV,KCDF4E,EAdH,WAAO,IAAD,EACczB,mBAAS,IADvB,mBACT0B,EADS,KACA3B,EADA,KAGhB,OACE,eAAC,EAAD,WACE,cAACwB,EAAD,CAAaxD,IAAK4D,EAAaC,IAAI,2BACnC,eAACJ,EAAD,WACE,cAAC,EAAD,CAAgBzB,WAAYA,IAC5B,cAAC,EAAD,CAAS9C,MAAOyE,WCTxBG,IAASjE,OACP,cAAC,IAAMkE,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0c9881d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Normal.d1734ca1.png\";","export default __webpack_public_path__ + \"static/media/bewd.d816a6a4.jpg\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  font-size: calc(10px + 1vmin);\n  font-weight: bold;\n  text-align: left;\n  padding: 0 16px 0 16px;\n`;\n\nexport const Canvas = styled.canvas`\n  display: block;\n  max-width: 100%;\n  max-height: 100%;\n  margin-top: 8px;\n`;\n","import { useEffect, useRef } from 'react';\nimport border from './assets/Normal.png';\nimport placeholder from './assets/bewd.jpg';\nimport { Container, Canvas } from './Preview.styles';\n\ntype Props = {\n  image?: string;\n};\n\nexport const Preview = ({ image }: Props) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    let count = 2;\n    const context = canvasRef.current?.getContext('2d');\n    const frame = new Image();\n    const img = new Image();\n\n    const render = () => {\n      if (--count > 0) return;\n\n      context?.drawImage(frame, 0, 0);\n      context?.drawImage(img, 50, 110, 320, 320);\n    };\n\n    frame.onload = render;\n    img.onload = render;\n\n    frame.src = border;\n    img.src = image || placeholder;\n  }, [image]);\n\n  return (\n    <Container>\n      <div>Preview</div>\n      <Canvas\n        ref={canvasRef}\n        width=\"420\"\n        height=\"610\"\n        data-testid=\"card preview\"\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  font-size: calc(10px + 1vmin);\n  font-weight: bold;\n  text-align: left;\n  max-width: calc(95% - 16px);\n  margin-left: 16px;\n`;\n\nexport const TitleContainer = styled.div`\n  display: flex;\n`;\n\nexport const Information = styled.div`\n  background-color: white;\n  color: black;\n  text-align: center;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 100%;\n  height: 24px;\n  width: 24px;\n\n  margin-left: 16px;\n  user-select: none;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  padding: 1vmin 0 3vmin 0;\n`;\n\nexport const Input = styled.input`\n  height: calc(10px + 3vmin);\n  font-size: calc(10px + 2vmin);\n  padding-bottom: 1vmin;\n\n  background: transparent;\n  border: none;\n`;\n\nexport const UploadButton = styled.button`\n  background-color: white;\n  color: black;\n  border: 1px;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  height: 34px;\n  width: 34px;\n`;\n\nexport const Label = styled.label`\n  color: red;\n`;\n","import { useCallback, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport {\n  Container,\n  TitleContainer,\n  Information,\n  InputContainer,\n  Input,\n  UploadButton,\n  Label,\n} from './Form.styles';\n\ntype Props = {\n  setPreview: (image: string) => void;\n};\n\nconst helpText = 'Images must be smaller than 10MB.';\n\nconst isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\n\nconst submitForm = async (file: File) => {\n  const url =\n    'https://us-east1-yugiohbot.cloudfunctions.net/yugiohbot_submission';\n\n  const data = new FormData();\n  data.append(file.name, file);\n\n  try {\n    await axios.post(url, data, {});\n    return true;\n  } catch (error) {\n    console.error('Error submitting image: ', error);\n    return false;\n  }\n};\n\nexport const SubmissionForm = ({ setPreview }: Props) => {\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState<File | null>(null);\n  const [message, setMessage] = useState('');\n\n  const submit = useCallback(async () => {\n    setLoading(true);\n    if (!image || !(await submitForm(image))) {\n      setMessage('Something went wrong, please try again later.');\n    } else {\n      setMessage(`Successfully uploaded your photo: ${image.name}`);\n    }\n    setLoading(false);\n  }, [image]);\n\n  return (\n    <Container>\n      <TitleContainer>\n        <label htmlFor=\"imageBrowser\">Upload Image</label>\n        <Information data-tip data-for=\"uploadHelp\">\n          ?\n        </Information>\n        <ReactTooltip\n          id=\"uploadHelp\"\n          place=\"right\"\n          globalEventOff={isMobile ? 'touchstart' : undefined}\n        >\n          <p>{helpText}</p>\n        </ReactTooltip>\n      </TitleContainer>\n      <InputContainer>\n        <Input\n          type=\"file\"\n          name=\"image\"\n          id=\"imageBrowser\"\n          onChange={({ target }) => {\n            setPreview(URL.createObjectURL(target.files && target.files[0]));\n            setImage(target.files && target.files[0]);\n          }}\n        />\n        <UploadButton onClick={submit} disabled={loading}>\n          âœ”\n        </UploadButton>\n      </InputContainer>\n      <Label data-testid=\"message\">{message}</Label>\n    </Container>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo-trans.a90feb3c.png\";","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nexport const HeaderImage = styled.img`\n  width: 100%;\n  max-width: 500px;\n\n  margin: 0 8px 0 8px;\n`;\n\nexport const Page = styled.div`\n  text-align: left;\n`;\n","import { useState } from 'react';\nimport { Preview } from './Preview';\nimport { SubmissionForm } from './Form';\nimport headerImage from './assets/logo-trans.png';\nimport { Container, HeaderImage, Page } from './App.styles';\n\nconst App = () => {\n  const [preview, setPreview] = useState('');\n\n  return (\n    <Container>\n      <HeaderImage src={headerImage} alt=\"Yu-Gi-Oh Bot 3000 logo\" />\n      <Page>\n        <SubmissionForm setPreview={setPreview} />\n        <Preview image={preview} />\n      </Page>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}