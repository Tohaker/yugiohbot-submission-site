// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Submission Form should render correctly 1`] = `
<SubmissionForm>
  <styled.div>
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "qpQpp",
            "rules": Array [
              "
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  font-size: calc(10px + 2vmin);
  text-align: left;
  color: white;
  padding: 0 8px;
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="sc-bdVaJa qpQpp"
      >
        <label>
          Card Title:
        </label>
        <styled.input
          name="title"
          onChange={[Function]}
          type="text"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "iFxOLg",
                  "rules": Array [
                    "
  height: calc(10px + 3vmin);
  font-size: calc(10px + 2vmin);
  margin: 1vmin 0 3vmin 0;

  input {
    background-color: white;
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            name="title"
            onChange={[Function]}
            type="text"
          >
            <input
              className="sc-bwzfXH iFxOLg"
              name="title"
              onChange={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <label>
          Card Image:
        </label>
        <styled.input
          name="image"
          onChange={[Function]}
          type="file"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "iFxOLg",
                  "rules": Array [
                    "
  height: calc(10px + 3vmin);
  font-size: calc(10px + 2vmin);
  margin: 1vmin 0 3vmin 0;

  input {
    background-color: white;
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            name="image"
            onChange={[Function]}
            type="file"
          >
            <input
              className="sc-bwzfXH iFxOLg"
              name="image"
              onChange={[Function]}
              type="file"
            />
          </StyledComponent>
        </styled.input>
        <label>
          Card Effect:
        </label>
        <styled.input
          name="effect"
          onChange={[Function]}
          type="text"
        >
          <StyledComponent
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "iFxOLg",
                  "rules": Array [
                    "
  height: calc(10px + 3vmin);
  font-size: calc(10px + 2vmin);
  margin: 1vmin 0 3vmin 0;

  input {
    background-color: white;
  }
",
                  ],
                },
                "displayName": "styled.input",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "input",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            name="effect"
            onChange={[Function]}
            type="text"
          >
            <input
              className="sc-bwzfXH iFxOLg"
              name="effect"
              onChange={[Function]}
              type="text"
            />
          </StyledComponent>
        </styled.input>
        <styled.button
          disabled={false}
          id="submit"
          onClick={[Function]}
        >
          <StyledComponent
            disabled={false}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-htpNat",
                  "isStatic": false,
                  "lastClassName": "bAkHCv",
                  "rules": Array [
                    "
  font-size: calc(10px + 2vmin);
  background-color: white;
  border-radius: 50px;
",
                  ],
                },
                "displayName": "styled.button",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-htpNat",
                "target": "button",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            id="submit"
            onClick={[Function]}
          >
            <button
              className="sc-htpNat bAkHCv"
              disabled={false}
              id="submit"
              onClick={[Function]}
            >
              Submit
            </button>
          </StyledComponent>
        </styled.button>
        <label />
      </div>
    </StyledComponent>
  </styled.div>
</SubmissionForm>
`;
